# -C : don't discard comments
# -H : show files being #included
# -P : don't add #lines
MACRO_ARGS="-C -P"

## TODO: unfinished: these filters can add warnings or unhide hidden #ifdef's from various file formats
## we should detect file format, and add notice, and if user asks, filter to unhide.
## we will need to map "c++" "C" "cxx" etc to "c"
c_notice () { java_notice }
## I think C can handle #ifdef's so no need to hide them so no need to unhide hidden ones
c_filter () { cat }
java_notice () { echo "/** This file was auto-generated by jpp.  You probably want to be editing $PPNAME instead. **/" }
java_filter () { sed 's+^[ 	]*//#+#+' }
html_notice () { echo "<!-- This file was auto-generated by jpp.  You probably want to be editing $PPNAME instead. -->" }
html_filter () { sed 's+^[ 	]*<!-- \(#.*\) -->+\1 +' }

INCLUDES=""
while test ! "$1" = "--" && test ! "$1" = ""
do
	INCLUDES="$INCLUDES -imacros $1"
	shift
done
shift || echo "Usage: jpp <macro_files...> -- <jpp_files_to_compile...>"

for PPNAME
do

	if echo "$PPNAME" | grep "\.jpp$" >/dev/null
	then
		JNAME=`echo "$PPNAME" | sed 's+\.jpp++'`
	else
		## Do common sensible conversions:
		# JNAME=`echo "$PPNAME" | sed 's+\.jpp$+\.java+'` ## aah this overwrote when it wasn't .jpp!
		## Or add ".jpp":
		JNAME=`echo "$PPNAME" | sed 's+$+.jpp+'` ## If it has .jpp it could remove it.  or we could ask as an option
	fi
	(
		## TODO: different comment types
		# echo "/** This file was auto-generated by jpp.  You probably want to be editing $PPNAME instead. **/" &&
		echo "<!-- This file was auto-generated by jpp.  You probably want to be editing $PPNAME instead. -->" &&
		echo &&
		## Pre-process:
		# gcc -x c Test.jpp -E $MACRO_ARGS -o - > Test.java
		## Pre-process using macros provided at command line:
		## Advantage: doesn't show include-file's contents =)
		gcc -x c "$PPNAME" -E $MACRO_ARGS $INCLUDES -o -
	) > "$JNAME"
## | grep -v "^# " > Test.java (sorted now thanks to gcc -P!)

	## Really we should collect these compiled filenames for one big compile at the end.
	# jikes "$JNAME"
	# javac Test.java

done

