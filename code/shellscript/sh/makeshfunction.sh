#!/bin/sh
## makeshfunction `find ~/j/code/shellscript -type f | grep -v /CVS/ | grep -v "\.hs" | grep -v "\.c" | grep -v "\.swp" | grep -v "\.txt$"` > allj.sh

# jsh-depends: endswith filename startswith error

## Notes: It is good that we include the main script itself as a function, in case it tries to make calls to itself.

## Does not appear to speed up processing.  :-(
## Well no, but it should at least circumvent some costs, such as re-parsing a script which is called often.

## Optimization:
export MKSHFN_STRIP_COMMENTS=true

## Unsafe:
# export EXPERIMENTAL_INDENT=unsafe

## Assertions:
# export CHECKING=true

if [ ! "$1" ]
then
	echo "makeshfunction <shellscript>"
	exit 1
fi

for FILE in "$@"
do

	FNAME=`
		filename "$FILE" | sed "s/\(.*\)\..*/\1/"
	`

	FIRSTLINE=`head -n 1 "$FILE"`

	SKIP=
	if startswith "$FIRSTLINE" "#!"
	then
		if ! endswith "$FIRSTLINE" "sh"
		then
			error "Not importing $FNAME as a function because of its hashbang: $FIRSTLINE"
			SKIP=true
		fi
	fi

	if [ ! $SKIP ]
	then

		### We output a function whose body is a copy of the script.

		# echo "### $FNAME auto-generated by jsh's mkshfn from $FILE"
		# echo "function $FNAME () {" ## Not POSIX?
		echo "$FNAME () {" #   # $FILE"
		cat "$FILE" |

		### We may process the function a little

		## Unecessary comments.  Could this cause problems?
		if [ "$MKSHFN_STRIP_COMMENTS" ]
		then grep -v "^[ 	]*#"
		else cat
		fi |

		## Uneccessary leading whitespace.
		## Not recommended as default, because it can cause problems.
		## Eg. on lines with odd # '"'s: ^[^"]*"[^"]*$ or ^\([^"]*"[^"]*"\)*[^"]*"[^"]*$$
		##                      or '''s
		##                      and what else?
		if [ "$EXPERIMENTAL_INDENT" ]
		then sed 's+^+  +'
		else cat
		fi

		## TODO: | squeeze_duplicate_empty_lines (leaving only a double \n\n)

		# Needed for files with no trailing \n (TODO: would be nice to check if needed :)
		echo

		echo "}"

	fi

	if [ "$CHECKING" ]
	then
		# cat "$FILE" | grep " \. [a-zA-Z]"
		## TODO: I'm not sure this is even working:
		cat "$FILE" | grep "[^ 	]exit " &&
		jshwarn "\\\\ calls to exit may cause problems!"
	fi >&2

done
