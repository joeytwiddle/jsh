#### I have disabled ppp-updateip because I cannot accept incoming requests.
#### Instead I wanted to set an offline URL, but I don't know how to do this automatically.
# exit 0
## OK well the next time I get online, it *should* work both ways, so I've reenable this script, so I can actually see hwi if she does come back on.

# export INTERFACE=eth0
## overrides my old defaults to eth1, since i switched from USB->cable_modem to eth->wireless_router->cable_modem
## disabled that export because now i have usb modem at eth2 - ppp-getip gets it right (and it always should? - trust that in future!?)

#### Before running scripts to update our IP into DNS, we check that we didn't already do it recently (dyndns.org doesn't like an update more than every 15 minutes).

## TODO: could allow option to force override of the 15min check
##       No, it's dangerous if cron runs < 15mins and it's not difficult to allow file access (/tmp!)
##       ??

LAST=/tmp/ppp-updateip.last

IP=`ppp-getip`

## This bit is a check to ensure we didn't already do an update with this IP
## Note: If an update fails, the IP address is not recorded as update =) but if you add an update and re-run it will skip.
## Ideally we would like other puters on the net to tell us when our ip is wrong.  (By connecting to them and asking them presumably.)

LASTIP=`cat "$LAST"`
if test "$LASTIP" = "$IP"
then
	# echo "$0: Last time we did an update, ip $IP was the same, so skipping."
	echo "$0: IP $IP has not changed since last update; skipping."
	exit 0
fi

## This bit is a check to ensure we didn't update already in the last 15 minutes.

## If the file ain't there, we assume we haven't updated for 15minutes.
## Maybe instead we should assume it has.  If we touch LAST and exit, the update could then occur in 15mins time.
## A bit annoying for a fresh boot though.  Alternatively we could keep the file somewhere outside /tmp.
if test -f "$LAST"
then

	NOW=/tmp/ppp-updateip.now
	touch "$NOW"

	if test ! -x "`which datediff`"
	then echo "$0: Couldn't find datediff - not trying to update ip." ; exit 3
	fi
	SECONDSSINCE=`datediff -secs -files "$LAST" "$NOW"`

	if test "$SECONDSSINCE" -lt 960
	then

		X=`datediff -files "$LAST" "$NOW"`
		echo "$0: Trying to re-update too soon.  ($X < 16m ago.)"
		exit 1

	fi

fi

## OK so let's do the update

## Make the "lock".  Repeated at bottom =)
if ! touch "$LAST"
then echo "$0: Couldn't touch $LAST.  Not trying to update ip." ; exit 2
fi

FAIL=false



######## BEGIN ACTUAL UPDATE

export INTERFACE=`ifonline`
[ "$INTERFACE" ] || jsherror "[ppp-updateip] ifonline returned nothing"

# dyndns.org update for hwi.ath.cx:
## disabled since telewest suck:
## reenabled since i'm not so firewalled :)
/root/ipcheck/doipcheck || FAIL=true

# dyndns.org update for generation-online.org
## Disabled 18/02/2005 because Erik started hosting this domain somewhere else.
# /root/ipcheck_generation-online.org/doipcheck_generation-online.org.sh || FAIL=true

# dyndns.org update for emailforever.net:
/root/ipcheck_emailforever.net/doipcheck_emailforever.net.sh || FAIL=true

# dyndns.org update for open-lists.net:  (My domain registration expired now)
# /root/ipcheck_open-lists.net/doipcheck_open-lists.net.sh || FAIL=true

( sleep 10m ; killall noip ) &
# no-ip.org update (for freenet):
/root/noip_updater_v1.6/noip -c /root/noip_updater_v1.6/no-ip.conf || FAIL=true
# since it likes to detach, and daemon itself, I used to kill it =)

# # dhs.org for hwi.dyn.dhs.org:
# HOST="hwi"
# USER="joey0"
# PASS="changeme"
# 
# URL="http://members.dhs.org/nic/hosts"
# HOSTCMD="hostscmd=edit&hostscmdstage=2"
# TYPES="type=4&updatetype=Online"
# CLOAK="cloak=Y&cloak_title=cloak+title"
# REST="mx=psybertech.yi.org&offline_url=&submit=Update&domain=dyn.dhs.org&hostname=$HOST"
# 
# WHOLEURL="$URL?$HOSTCMD&$TYPES&$IP&$REST&$CLOAK"
# 
# echo "Updating IP to $IP"
# echo "Using following URL: $WHOLEURL"
# 
# # echo "Lynx can't handle terminal $TERM"
# # echo "NOT UPDATING IP!"
# echo "UPDATING IP!"
# env TERM=vt100 lynx -auth=$USER:$PASS -dump "$WHOLEURL"

######## END ACTUAL UPDATE

if test "$FAIL" = "true"
then
	echo "ppp-updateip: failed!"
	exit 4
fi

( date && echo "$IP" ) >> /home/joey/j/logs/iphistory.txt

echo "$IP" > "$LAST"
