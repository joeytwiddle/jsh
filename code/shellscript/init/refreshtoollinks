# Symbolically link all relevant tools into $JPATH/tools/ directory
# so that they may all be put in the path in one go!

if test ! -d "$JPATH"
then
	echo "Need JPATH"
	exit 1
fi

echo "Clearing existing links"
"rm" -f $JPATH/tools/*

if test ! "$1" = "-old" && test "ifonly" = "itworked"
then

	## Faster

	## Main (only) problem is that d.zsh gets ln'ed to d not d.zsh

	echo "Linking"
	(
	find $JPATH/code/shellscript \
		  \( -regex ".*/[^\.]*" -o -name "*.sh" -o -name "*.hs" \) ! -type d
	test -d "$JPATH/code/java" && find $JPATH/code/java -name "*.sh"
	) |
	/bin/grep -v "/.ignore/" |
	/bin/grep -v "/CVS/" |
	sed 's+\(.*\)/\([^\.]*\)\(\..*\|\)+ln -sf "\1/\2\3" "$JPATH/tools/\2"+' |
	# cat
	sh

	## Note: we haven't dealt with duplicates or dangling links

else

	shift

	#################################
	## The old one

	echo "Collecting"
	files=`find $JPATH/code/shellscript \( -name "*" -o -name "*.sh" -o -name "*.hs" \) ! -type d | /bin/grep -v "/.ignore/" | /bin/grep -v "/CVS/"`
	test -d "$JPATH/code/java" && files="$files "`find $JPATH/code/java -name "*.sh" | /bin/grep -v "/CVS/"`
	echo "Linking"
	ln -sf $files $JPATH/tools/

	echo "Renaming"
	cd $JPATH/tools

	# Rename any of those with .sh or .hs extensions to not have it!
	for x in `find . -name "*.sh"` `find . -name "*.hs"`; do
	  y=`echo $x | sed "s/\.sh$//;s/\.hs$//"`
		if test -f "$y"; then
			J="$JPATH/code/shellscript/file/justlinks.sh"
			A=`$J "$x"`
			B=`$J "$y"`
			echo
			echo "Error duplicates: $A $B"
			echo
			if cmp "$A" "$B"; then
				echo "Identical."
			else
				$JPATH/code/shellscript/fake/jfcsh.sh "$A" "$B"
			fi
			echo
			echo "Will you?"
			echo "del \"$A\""
			echo "or will you"
			echo "del \"$B\""
			echo "?"
			echo
		else
		# "rm" $y
		  mv -f $x $y
		fi
	done

fi

echo "Binaries"
# echo "Skipping binaries"
refreshbintoollinks
