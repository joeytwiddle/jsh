


Many jsh scripts will not run without $JPATH, or other things setup by jsh, or jsh-simple (which are many).
Ofc these won't standalone.
Other scripts making use of the usualy j/jsh initialiasation will not work when precompiled with compilejshscript.




jsh needs to be broken into sensible modules
it is bloated because it loads everything and repeats other things
need to think about:
- which scripts need what sort of config?
- are they run a lot (should their config be loaded into user shell env, or
  should the scripts load it at runtime?)

Desired features:
- User can choose which scripts to install / use / ignore.
- Dependencies are checked (for other scripts or system packages, or something in the PATH at least)
- Configuration happens in the correct place, and user knows how to alter it.

States:
	viewing (no xscreensaver, no fadevolume)
	normal -> used
	       -> unused (=sleeping) (fadevolume, xscreensaver)

ability to tag current song or current background with a meta-word



TODO: remove ppp-updateip because it gives too much of my security away!





replace all checks which call tty with checks that use [ -t 0 ]
(that is, checking whether stdin/term is a user-term or if we are part of a pipe)



Some jsh scripts are mature and ready for release to the community.  Others are
an experimental mess, and should be avoided by non-experts!
It might be nice for a jsh script to have a jsh tag representing its status,
e.g.:
  prototype
  mature (free of bugs, finished or at least fully functional)
  dev (not recommended for use yet, unless you are a developer who wants the latest version)




For maximum portability, our shebangs should look like this:

#! /usr/bin/env bash

Because: http://stackoverflow.com/questions/733824/how-to-run-a-sh-script-in-an-unix-console-mac-terminal/733901#733901

