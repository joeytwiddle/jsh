# this-script-does-not-depend-on-jsh: check new
# jsh-depends: cursecyan cursemagenta cursenorm jwatchcomp breakonctrlc jdeltmp jgettmp
if [ "$1" = "" ] || [ "$1" = --help ]
then
	echo
	echo 'jwatch [ -oneway ] [ -quiet ] [ -delay <seconds> ] [ -direct ] ... "<command>"'
	echo
	echo "  Executes the given command every 5 seconds, and reports changed lines."
	echo
	echo "  -oneway: does not show dropped lines (red), only shows new lines (white)."
	echo "  -quiet:  does not do initial verbose command check" ## CONSIDER: alternatively, -verbose could be a recommended sh alias, and quiet the default
	echo "  -direct: executes the command inline rather than piping to a new sh"
	echo "  -delay:  pauses for given period between calls to <command> (defaults to 5s)"
	echo
	exit 1
fi

if [ "$1" = -oneway ]
then ONEWAY="-oneway"; shift
fi

if [ "$1" = -quiet ]
then QUIET=true; shift
fi

DELAY=5
if [ "$1" = -delay ]
then
	DELAY="$2"
	shift; shift
fi

if [ "$1" = -direct ]
then
	shift
	METHOD="$@"
else
	## We no longer bother with file method:
	# EXECSH=`jgettmp jwatch-do-$1`
	# echo "$@" > $EXECSH
	## Better to preserve quotes:
	EXECSTR=""
	for X
	# do EXECSTR="$EXECSTR\"$X\" " ## why?!
	do EXECSTR="$EXECSTR$X "
	done
	# echo "$EXECSTR" > $EXECSH
	# chmod a+x "$EXECSH"
	## We default to pipe method:
	# METHOD='echo "$EXECSTR" | sh'
	METHOD='eval "$EXECSTR"'
fi

# METHOD="$METHOD | striptermchars"

NEW=`jgettmp "new-$1"`
OLD=`jgettmp "old-$1"`

## Optionally, display the results once (in case user assumed aliases would work!)
if [ ! "$QUIET" ]
then
	cursecyan
	echo "### Check this is what you wanted to watch: ('|'s etc. should be escaped; no aliases or fns)"
	cursemagenta
	# $EXECSH
	# echo "$EXECSTR" | sh
	eval "$METHOD" | tail -n 20
	cursecyan
	echo "### End check; starting watch. ----------------------------- "
	cursenorm
fi

if [ ! "$JWATCHCOMPCOM" ]
then
  JWATCHCOMPCOM="jwatchcomp $ONEWAY"
fi

## Strange: I was getting a bail on this line doing "jwatch findjob sleep" with error "/home/joey/linux/j/tools/jwatch: line 78: 1: ambiguous redirect" but then it stopped!
eval "$METHOD" > $NEW

sleep $DELAY

while [ true ]; do

	mv $NEW $OLD

	# $EXECSH > $NEW
	# echo "$EXECSTR" | sh > $NEW
	eval "$METHOD" > $NEW

	$JWATCHCOMPCOM $NEW $OLD

	sleep $DELAY
	## If we want jwatch to keep in time, ie. run exactly every 5 seconds,
	## then we could bg this sleep at the start with & and then wait here.
	## This assumes that the process takes < 5s to run.
	## If not, timing will be wrong, and jwatch will never sleep!
	## If the process is heavy, this could drain your system.
	## Hence the existing method is good as a default.

	## Not sure this really works:
	# `breakonctrlc`
	`breakonctrlc` || exit

done

jdeltmp "$NEW" "$OLD" "$EXECSH"
