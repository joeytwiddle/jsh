#!/bin/sh

## TODO: to make it more like windows recycle dir, we should rm a file if it is deleted from /RECLAIM or $JPATH/trash

DOCVS=
if test "$1" = "-cvs"
then DOCVS=true; shift
fi

if test ! "$1" || test "$1" = --help
then
	echo 'del [-cvs] <files>'
	echo 'will move <files> to the /RECLAIM directory of the partition, or to $JPATH/trash'
	echo 'The option -cvs also runs "cvs remove" on each file.'
	exit 1
fi

ALLOK=0

for FILE
do

  if test -f "$FILE" || test -d "$FILE"
  then

    MOUNTPNT=`wheremounted "$FILE"`
    PARENTDIR=`dirname "\`realpath \"$FILE\"\`"`

    ## Work out where to move the file to.
    for TRASHDIR in "$MOUNTPNT/RECLAIM" "$JPATH/trash" "$HOME/.trash" NO_DIR_WRITEABLE
    do
      if test -w "$TRASHDIR" || test -w `basename "$TRASHDIR"`
      then break
      fi
    done

    if test "$TRASHDIR" = NO_DIR_WRITEABLE
    then
      error "No suitable trash directory found."
      ALLOK=1
      break ## continue
    fi

    ## If deleting to $MOUNTPNT/RECLAIM then move MOUNTPNT from parent dir to delete to (otherwise we delete to $MOUNTPNT/RECLAIM/$MOUNTPNT/...!)
    if test "$TRASHDIR" = "$MOUNTPNT/RECLAIM"
    then TODELPARENTDIR=`echo "$PARENTDIR" | sed "s+^$MOUNTPNT++"`
    else TODELPARENTDIR="$PARENTDIR"
    fi
    DEST="$TRASHDIR/$TODELPARENTDIR"
    PRETTYDEST="$TRASHDIR$TODELPARENTDIR"

    # Create destination directory
    while test -f "$DEST"
    do
      echo "$DEST is a file - using $DEST.dir"
      DEST="$DEST.dir"
    done
    mkdir -p "$DEST"
    if test ! -d "$DEST"; then
      error "del: problem creating destination directory: $DEST"
      error "del: not moved to trash: $FILE"
      # waitforkeypress
      # exit 1
      ALLOK=1
      break ## continue
    fi

    FILENAME=`basename "$FILE"`

    while test -f "$DEST/$FILENAME" -o -d "$DEST/$FILENAME"
    do
      FILENAME="$FILENAME"_
    done

    # Something used to go wrong if $FILENAME is a dir ending in "/"

    # Move it and report =)
    echo "$FILE "`cursegreen`"->"`cursenorm`" $PRETTYDEST/$FILENAME"
    mv -f "$FILE" "$DEST/$FILENAME"

    # Remove from CVS
    if test $DOCVS
    then
      if test -d "$PARENTDIR/CVS"
      then
        cvs remove $FILE > /dev/null 2>&1
        if test "$?" = "0"
        then
          echo "Removed from CVS"
        else
          cursered
          cursebold
          echo "Error with CVS"
          cursenorm
        fi
      fi
    fi

  else

    error "del: does not exist: $FILE"
    ALLOK=1
    # continue

  fi

done

exit $ALLOK

## The beautiful original:
# echo "mkdir -p $TRASHDIR/$PWD/"
# mkdir -p $TRASHDIR/$PWD/
# echo "mv -f $@ $TRASHDIR/$PWD/"
# mv -f $@ $TRASHDIR/$PWD/
