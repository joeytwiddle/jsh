#!/bin/sh

## Policy: empty files get 0, files with no '\n' get 1, files with '\n' get count of '\n's plus 1 if there is a last line with no trailing '\n'.
## In other words, counts the number of non-empty lines you could get from the file/stream

## Actually wc says it counts newlines, so they act the same except when the file is just '\n', in which case countlines responds 0.
## Not sure if that behaviour was needed for another script, but I like it anyway.

docountlines () {

	cat "$@" |

	## Meets policy:
	awk " END { print "' NR } '

	## Does not meet policy; simply counts number of '\n's.
	# wc -l |
	## Remove spaces in output for backward-compatibility, and external programs, eg. expr doesn't like 1 - "  20"
	# tr -d ' '

}

if [ ! "$2" ]
then docountlines "$@"
else
	for X
	do echo "$X	"`docountlines "$X"`
	done
fi
