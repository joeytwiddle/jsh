#!/bin/sh

## Counts the number of lines in the file or stream.
## If the file is empty, produces 0
## If the file contains just `\n`, produces 1.
## Otherwise produces the number of `\n`s but +1 if the last line does not end in `\n`.

## echo -n     | countlines      # 0
## echo        | countlines      # 1
## echo -n foo | countlines      # 1
## echo foo    | countlines      # 1

## The original spec said that just `\n` should produce 0, but it wasn't actually doing that on Mac.  Does it do it on Linux?

docountlines () {

	cat "$@" |

	## Meets policy:
	awk " END { print "' NR } '

	## Does not meet policy; simply counts number of '\n's.
	# wc -l |
	## Remove spaces in output for backward-compatibility, and external programs, eg. expr doesn't like 1 - "  20"
	# tr -d ' '

}

if [ ! "$2" ]
then docountlines "$@"
else
	for X
	do echo "$X	"`docountlines "$X"`
	done
fi
