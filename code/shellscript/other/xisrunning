## xisrunning - check we have an accessible running X display



## Can you have X without a $DISPLAY variable?  We assume not!
[ ! "$DISPLAY" ] && exit 1
## But you can have a DISPLAY variable for a display that cannot be reached.

if xdpyinfo >/dev/null 2>&1
then exit 0
else exit 1
fi



## Old method - check we have a valid X display by spawning an xterm.
## This was slow and messy.  Sometimes it closed so fast that it broke fluxbox.
## TODO: If we do ever use this method again, consider starting xterm minimized - would be far better.

# x-terminal-emulator -e touch /tmp/xisrunning."$$" 2>/dev/null
# ## Unfortunately x-terminal-emulator backgrounds itself.  I haven't tested if wait can catch it.
# sleep 2s &
# wait
xterm -e touch /tmp/xisrunning."$$"

[ -f /tmp/xisrunning."$$" ] ; RESULT="$?"
rm -f /tmp/xisrunning."$$"
# [ "$RESULT" = 0 ] && XISRUNNING=true
exit "$RESULT"
# rm /tmp/xisrunning."$$" ## I thought this might give an exit code representing whether the file existed, but it didn't.
