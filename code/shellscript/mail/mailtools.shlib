## Shellscript library offering simple mailbox interface via /usr/bin/mail =)

## Requires: env var MBOX to be set before sourcing (can be provided as first argument)

## TODO: there is a move-to-another-mailbox method in mailcalendar.sh which should come here but it may not be ideal (how is its error handling?)

if test ! "$MBOX"
then
	MBOX="$1"
	shift
	if test ! "$MBOX"
	then
		MBOX=/tmp/mbox
		if test ! -f "$MBOX"
		then
			echo "No \$MBOX provided and nothing in /tmp/mbox"
			## Rather too harsh at the com-line:!
			# exit 1
		fi
	fi
fi

maildo() {
	echo "$1" | /usr/bin/mail -N -f "$MBOX"
}

mailcount() {
	maildo "q" |
	(
		read HEADER
		read FOLDER TOTAL messages NUMNEW new NUMUNREAD unread
		cat > /dev/null
		echo "$TOTAL"
	)
}

getmail() {
	## Arguments are the index numbers of the emails in the mbox
	maildo "$@"
}

getaddresses() {

	# NUM=`mailcount`
	# for N in `seq 1 $NUM`
	# do
		# # maildo $N | grep "^From:" | head -1 | dropcols 1
		# # maildo $N | grep "^Date:" | head -1 | dropcols 1
		# # EMAIL=`maildo $N | grep "^From:" | head -1 | dropcols 1 | after "<" | before ">"`
		# # DATE=`maildo $N | grep "^Date:" | head -1 | dropcols 1 | after "Date: "`
		# # echo "$EMAIL	$DATE"
		# printf "$N/$NUM: "
		# maildo $N | tostring "" |
		# grep "^From:" |
		# head -1
	# done |
	# dropcols 1 |

	# cat "$MBOX" |
	# grep "^From:" |
	# after "<" | before ">" |
	# after "\[mailto:" | before "\]" |
	# after " " |

	export COLUMNS=65535
	NUM=`mailcount`
	echo "$NUM emails"
	echo "from "`seq 1 $NUM` | /usr/bin/mail -N -f "$MBOX" |
	sed 's+......++' |
	# echo maildo f `seq 1 20`
	# maildo f `seq 1 $NUM` |
	takecols 1 |
	sort | uniq
	# cat

}

if test "$*"
then "$@"
fi
